#!/bin/bash
#------------------------------------------------
# Docker helpers
#------------------------------------------------


# Handle command completions
test -e "/Applications/Docker.app/Contents/Resources/etc/docker.bash-completion" && source "/Applications/Docker.app/Contents/Resources/etc/docker.bash-completion"
test -e "/Applications/Docker.app/Contents/Resources/etc/docker-machine.bash-completion" && source "/Applications/Docker.app/Contents/Resources/etc/docker-machine.bash-completion"
test -e "/Applications/Docker.app/Contents/Resources/etc/docker-compose.bash-completion" && source "/Applications/Docker.app/Contents/Resources/etc/docker-compose.bash-completion"

function dock-help() {
cat << EOF
Special docker functions are marked with dock-

  Image commands: dock-image-*
  Containers:     dock-container-*
  Volume:         dock-volume-*
  Exec commands:  dock-exec-*
EOF

}

# show docker images
function dock-image-ls(){
  docker image ls
}

# Remove dangling images
function dock-image-clean-dangling() {
  	docker rmi $* $(docker images -q -a -f dangling=true)
}

# Remove an docker image
# Provide a completion function
function dock-image-rm() { 
  if [ $# -lt 1 ]
    then
      echo "Provide image id"
      return 1
    fi
  docker rmi $1; 
}



# remove latest created images
function dock-image-rm-latest(){
  dock-image-rm $(docker images -q | awk 'NR == 1 {print $0}')
}

# Remove all Docker images
alias dock-image-rm-all='docker rmi $(docker images -q)'
alias dock-image='docker images'


###########
##
## Docker containers
##
###########

function dock-container-rm() { 
	docker rm $@
}

function dock-container-rm-all(){
  # Remove all Docker container
  docker rm $(docker ps -a -q)
}

#Inspect a running Docker container
function dock-container-find() {
  docker ps | grep "$1 " | cut -d ' ' -f1
}

function dock-container-exec() {
  docker exec -it `dock-container-find $1` /bin/bash
}

# show cotainer logs. You would pass the container id
function dock-container-logs(){
  docker logs $1
}

# watching cotainer logs. You would pass the container id
function dock-container-tail(){
  docker logs -f $1
}

function dock-container-run(){
  echo
}

function dock-container-stop(){
  docker stop $@
}

function dock-container-stop-all(){
  docker stop $(docker ps -a -q)
}

function dock-container-rm-exited() { 
  echo "Deleting all containers"
  docker rm $(docker ps -qf "status=exited") $(docker ps -qf "status=created")
}


alias dock-ps='docker ps'
alias dock-ps-all='docker ps -a'
alias dock-ps-exited='docker ps -f "status=exited"'
alias dock-up='docker-compose up -d'
alias dock-down='docker-compose down -v'
# Kill all running Docker container
alias dock-kill-all='docker kill $(docker ps -q)'

###########
##
## Docker volumes
##
###########

# show all docker volulmes
alias dock-volume-ls='docker volume ls'

# remove some volumes. You would pass the volume names.
function dock-volume-rm(){
  docker volume rm $@
}


# Store all container commands in host bash history
alias dock-bash='docker run -e HIST_FILE=/root/.bash_history -v=$HOME/.bash_history:/root/.bash_history'

