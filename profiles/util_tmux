#------------------------------------------------
# TMUX
#------------------------------------------------

# Activate bash completion
if [ -f /usr/local/etc/bash_completion.d/tmux ]; then
    source /usr/local/etc/bash_completion.d/tmux
fi

function tmux-ls(){
  tmux ls
}

function tmuxp-ls(){
  for x in `ls -1 $HOME/.tmuxp/`;
  do
    filename="${x%.*}"
    echo $filename
  done
}

function tmuxp-start(){
  if [ "$#" -ne 1 ]; then
    echo -e "\033[1;31mProvide a session to start \033[0m"
  fi
  session_name=$1
  tmux ls | cut -d":" -f 1 | grep "$session_name" 2> /dev/null
  if [ $? -eq 0 ]
  then
      echo -e "\033[1;31mFollowing session has already been loaded: $session_name \033[0m"
      echo ""
  else
      tmuxp load $session_name --yes -d
  fi
}

function tmuxp-save(){
  if [ "$#" -ne 1 ]; then
    echo -e "\033[1;31mProvide a session name to save \033[0m"
  fi
  tmuxp freeze $1
}


function tmuxp-load-all(){
  declare -a tmux_session_arr=("my" "tunnel" "docker" "work" "access")
  title TMUX
  for tsession_name in "${tmux_session_arr[@]}"
  do
    SESSION_NAME=$tsession_name
    fact=`tmux list-sessions | grep ${tsession_name}`
    if [ "x${fact}" == "x" ]; then
        tmuxp load ${tsession_name} --yes -d
    fi
  done
  tmux attach-session -t work
}

function tmux-kill-session(){
  if [ "$#" -ne 1 ]; then
    echo -e "\033[1;31mProvide a session name to kill \033[0m"
  fi
  tmux kill-session -t  $1
}

function tmux-kill-server(){
  tmux kill-server
  
}


