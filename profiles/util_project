#!/bin/bash
###########################################
##
## Provide functions for managing a project
##
############################################

#
# Sources project environment
#
function startproject(){
    curdir=`pwd`
    current_project=$(basename ${curdir})
    # Now try setting the tab and color
    settabcolor 
    title ${current_project} 
    setbadge "Project:\n${current_project}"
    echo -e "\033[1;31m Starting project: ${current_project}\033[0m"
    bash --init-file ${curdir}/startproject
    title ""
    setbadge ""
    settabcolor 
}


#
# Creates project environment
#
function mkproject (){
    curdir=`pwd`
    current_project=$(basename ${curdir})
    if [ $# -lt 1 ]; then
        PROJECTNAME=$current_project
        project_parent_dir=$(dirname ${curdir})
        echo -e "\033[1;31m Initializing current directory as project: ${PROJECTNAME} \033[0m"
    else
        PROJECTNAME=$1
        project_parent_dir=${curdir}
        echo -e "\033[1;31m Creating new project under current directory: ${PROJECTNAME}\033[0m"
        if [ -d $PROJECTNAME ]; then
            echo -e "\033[1;31m Error: project already exists: ${PROJECTNAME}\033[0m"
            return 1
        fi
    fi
    # Create project and sub-directories 
    mkdir -p ${project_parent_dir}/${PROJECTNAME}/bin
    touch ${project_parent_dir}/${PROJECTNAME}/projectprofile
    touch ${project_parent_dir}/${PROJECTNAME}/startproject


# Now create a project startup file
cat >${project_parent_dir}/${PROJECTNAME}/startproject << EOF
source ${HOME}/.bash_profile
source ${project_parent_dir}/${PROJECTNAME}/projectprofile
builtin cd ${project_parent_dir}/${PROJECTNAME}
echo -e "\033[1;31m${PROJECTNAME} environment is ready!\033[0m"
EOF

# Now create a projectactivate source script
cat >${project_parent_dir}/${PROJECTNAME}/projectprofile << EOF
#!/bin/bash

### Project: ${PROJECTNAME} 
if [ -z "\$IN_APP_ENVIRONMENT" ]; then
	export IN_APP_ENVIRONMENT="yes"
else
	echo -e "\033[1;31m Already in ${PROJECTNAME} environment, please deactivate first!\033[0m"
	return;
fi

export HISTFILE=${project_parent_dir}/${PROJECTNAME}/.bashhistory
shopt -s cmdhist
shopt -s histappend 
export HISTCONTROL=erasedups:ignorespace:ignoreboth
export HISTSIZE=10000
unset HISTFILESIZE
export HISTFILESIZE=1000000

#
# Place holder to activate python virtual environment
# source ${HOME}/.vpython/<name>/bin/activate
#

# Add project bin path
export PATH=${project_parent_dir}/${PROJECTNAME}/bin:\$PATH
alias cdproject='cd ${project_parent_dir}/${PROJECTNAME}'
export APP_PROJECT_PATH=${project_parent_dir}/${PROJECTNAME}
export PROJECTNAME=${PROJECTNAME}

# Set new Prompt
export OLD_PS1=\$PS1
export PS1="\[\033[1;31m\](${PROJECTNAME})\[\033[0m\]\${OLD_PS1}"
clear

function exitproject () { 
    echo -e "\033[1;31m Exiting ${PROJECTNAME} environment\033[0m"
    exit 0
}
EOF

}


#
# Creates goproject environment
#
function mkgoproject (){
    curdir=`pwd`
    if [ $# -lt 1 ]; then
        echo -e "\033[1;31m Error: Provide a go project name\033[0m"
        return 1
    fi
    PROJECTNAME=$1
    if [ -d $PROJECTNAME ]; then
        echo -e "\033[1;31m Error: go project already exists: ${PROJECTNAME}\033[0m"
        return 1
    fi

    mkproject $PROJECTNAME
    mkdir -p ${PROJECTNAME}/src
    mkdir -p ${PROJECTNAME}/pkg

cat >>${curdir}/${PROJECTNAME}/projectprofile << EOF
#
# GO PROJECT ENVIRONMENT
#
export GOPATH=${curdir}/${PROJECTNAME}
export GOBIN=${curdir}/${PROJECTNAME}/bin

function ls-project(){
    /bin/ls -1 ${curdir}/${PROJECTNAME}/src
}

function cd-project(){

    if [ $# -lt 1 ]; then
        echo -e "\033[1;31m Error: Provide a project name\033[0m"
        return 1
    fi
    if [ -d ${curdir}/${PROJECTNAME}/src/$1 ]; then
        setbadge "$1"
        settabcolor
        builtin cd ${curdir}/${PROJECTNAME}/src/$1
    else
        setbadge "${PROJECTNAME}"
        settabcolor
        builtin cd ${curdir}/${PROJECTNAME}/src
    fi
}

EOF
}
