#------------------------------------------------
# Bash history storage and customization
#------------------------------------------------


# append to bash_history if Terminal.app quits
shopt -s histappend

# Ignore duplicate commands
export HISTCONTROL="ignoredups"
export HISTCONTROL=erasedups

# Set a larger bash history
HISTFILESIZE=100000
HISTSIZE=10000

export AUTOFEATURE=true autotest

# Ignore commands that begin with a space, 
# Ignore 'exit' command
export HISTIGNORE="&:ls:[ \t]*:[bf]g:exit:clear:c:home:disk:up:history:cd:emacs:vi"


if [ "$(uname)" == "Darwin" ]; then
	
	#------------------------------------------------
	# Cleanup terminal logs for speed up
	#------------------------------------------------

	# Clear terminal logs, useful for "Terminal App" in Mac
	alias terminal_clearlogs='sudo rm -rf /private/var/log/asl/*.asl'

	# function for setting terminal titles in OSX
	function title {
	  printf "\033]0;%s\007" "$1"
	}

	#------------------------------------------------
	# Map some macport installation for direct use
	#------------------------------------------------
	
	[[ -f "/opt/local/bin/emacs" ]] && alias emacs='/opt/local/bin/emacs'
	[[ -f "/opt/local/bin/emacs" ]] && alias startemacs='/opt/local/bin/emacs --daemon'
	[[ -f "/opt/local/bin/emacsclient" ]] && alias stopemacs="/opt/local/bin/emacsclient -e '(kill-emacs)'"
	[[ -f "/opt/local/bin/tmux" ]] && alias tmux='/opt/local/bin/tmux'
	[[ -f "/opt/local/bin/emacsclient" ]] && alias emacsclient='/opt/local/bin/emacsclient -c'
	[[ -f "/opt/local/bin/hg" ]] && alias hg='/opt/local/bin/hg'
	#[[ -f "/opt/local/bin/R" ]] && alias R='/opt/local/bin/R'
	#[[ -f "/opt/local/bin/R" ]] && export RSTUDIO_WHICH_R=/usr/local/bin/R
	#[[ -f "/opt/local/bin/Rscript" ]] && alias R='/opt/local/bin/Rscript'
	
	
	#------------------------------------------------
	# Open new tabs from command line
	# http://stackoverflow.com/questions/7171725
	#------------------------------------------------

	tabnew() {
		TAB_NAME=$1
		COMMAND=$2
		osascript \
		  -e "tell application \"Terminal\"" \
		  -e "tell application \"System Events\" to keystroke \"t\" using {command down}" \
		  -e "do script \"printf '\\\e]1;$TAB_NAME\\\a'; $COMMAND\" in front window" \
		  -e "do script \"clear \" in front window" \
		  -e "end tell" > /dev/null
	}
	

fi



