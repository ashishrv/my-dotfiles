#!/bin/bash
#------------------------------------------------
# Terminal support
#------------------------------------------------

function title {
    echo -ne "\033]0;"$*"\007"
}


if [ "$(uname)" == "Darwin" ]; then
	
	#------------------------------------------------
	# Cleanup terminal logs for speed up
	#------------------------------------------------

	# Clear terminal logs, useful for "Terminal App" in Mac
	alias terminal_clearlogs='sudo rm -rf /private/var/log/asl/*.asl'
	
	#------------------------------------------------
	# Map some macport installation for direct use
	#------------------------------------------------
	
	[[ -f "/opt/local/bin/emacs" ]] && alias emacs='/opt/local/bin/emacs'
	[[ -f "/opt/local/bin/emacs" ]] && alias startemacs='/opt/local/bin/emacs --daemon'
	[[ -f "/opt/local/bin/emacsclient" ]] && alias stopemacs="/opt/local/bin/emacsclient -e '(kill-emacs)'"
	[[ -f "/opt/local/bin/tmux" ]] && alias tmux='/opt/local/bin/tmux'
	[[ -f "/opt/local/bin/emacsclient" ]] && alias emacsclient='/opt/local/bin/emacsclient -c'
	[[ -f "/opt/local/bin/hg" ]] && alias hg='/opt/local/bin/hg'
	#[[ -f "/opt/local/bin/R" ]] && alias R='/opt/local/bin/R'
	#[[ -f "/opt/local/bin/R" ]] && export RSTUDIO_WHICH_R=/usr/local/bin/R
	#[[ -f "/opt/local/bin/Rscript" ]] && alias R='/opt/local/bin/Rscript'
	
	#------------------------------------------------
	# Open new tabs from command line for iTerm
	#------------------------------------------------


	function setbadge(){
		# Sets iTerm badge 
		fact=`env | grep iTerm.app`
		if [ "x$fact" != "x" ];then
			if [ "$#" -eq 1 ]; then
				badgename=$1
				#printf "\e]1337;SetBadgeFormat=%s\a" $(echo -n "\(session.name)" | base64)
				echo "setting badge $badgename"
				printf "\e]1337;SetBadgeFormat=%s\a" $(echo -n "$badgename" | base64)
			fi
		fi
	}

	function newtab(){
		# Creates new iTerm badge 
		fact=`env | grep iTerm.app`
		if [ "x$fact" != "x" ];then
			local cdto="$PWD"

			if [ "$#" -eq 1 ]; then
				tabcolor=`generatehexcolor $1`
			else
				tabcolor=`generatehexcolor`
			fi

			read -d '' -r script <<EOF
			tell application "iTerm"
			activate
			repeat until frontmost
				delay 0.1
			end repeat
			tell current window to create tab with default profile
			tell current session of current window to write text "${HOME}/.iterm2/it2setcolor tab $tabcolor; builtin cd $cdto; clear"
			end tell
EOF
			# Execute OSA script
			osascript &>/dev/null <<<"$script"
		fi
	}	

	function settabcolor(){
		# Sets iTerm tab color
		fact=`env | grep iTerm.app`
		if [ "x$fact" != "x" ];then
			if [ "$#" -eq 1 ]; then
				tabcolor=`generatehexcolor $1`
			else
				tabcolor=`generatehexcolor`
			fi
			if [ -f ${HOME}/.iterm2/it2setcolor ]; then
				${HOME}/.iterm2/it2setcolor tab $tabcolor
			fi
		fi
	}

fi

complete -F _generatehexcolor settabcolor

