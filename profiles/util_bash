#!/bin/bash
#------------------------------------------------
# Bash shell improvements
#------------------------------------------------

# Format
export HISTTIMEFORMAT='%F %T '
# Ignore duplicate commands
export HISTCONTROL=erasedups:ignorespace:ignoreboth

# Set a larger bash history
export HISTSIZE=10000
unset HISTFILESIZE
export HISTFILESIZE=1000000

export AUTOFEATURE=true autotest

shopt -s cmdhist
# append to bash_history if Terminal.app quits
shopt -s histappend


# Ignore commands that begin with a space, 
export HISTIGNORE="&:?:??:pwd:ls:ls -ltr:ls -la:[ \t]*:#*:[bf]g:exit:clear:home:disk:up:histor:emacs:rm *"

# Some Colors first
# Bash colors
#export GREP_OPTIONS='--color=auto'
export GREP_COLOR='1;32'
export GREP_COLOR="33;40" 
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

#
# Some colors for the files
#
export LS_COLORS="no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;37;41:mi=01;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;3
2:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=
01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35:*.py=00;35:*.java=00;35"

# Some color names
RESET="\[\017\]"
NORMAL="\[\033[0m\]"
RED="\[\033[31;1m\]"
YELLOW="\[\033[33;1m\]"
WHITE="\[\033[37;1m\]"
SMILEY="${WHITE}:)${NORMAL}"
FROWNY="${RED}:(${NORMAL}"

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA=$(tput setaf 9)
		ORANGE=$(tput setaf 172)
		GREEN=$(tput setaf 190)
		PURPLE=$(tput setaf 141)
	else
		MAGENTA=$(tput setaf 5)
		ORANGE=$(tput setaf 4)
		GREEN=$(tput setaf 2)
		PURPLE=$(tput setaf 1)
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	GREEN="\033[1;32m"
	PURPLE="\033[1;35m"
	BOLD=""
	RESET="\033[m"
fi

export MAGENTA
export ORANGE
export GREEN
export PURPLE
export BOLD
export RESET

_generatehexcolor () {
    candidates=(color_drgb color_lrgb color_drg color_lrg color_dgb color_lgb color_drb color_lrb color_dr color_lr color_db color_lb color_dg color_lg)
    COMPREPLY=()
    for candidate in ${candidates[@]}; do
        if [[ "$candidate" == "$2"* ]]; then
            COMPREPLY+=("$candidate")
        fi
    done
}


function generatehexcolor(){
	# d -> dark, l -> light, r -> red, b -> blue, g-> green
	num1=$(($RANDOM % 128))
	num2=$(($RANDOM % 128))
	num3=$(($RANDOM % 128))
	num1x=`printf '%x\n' $num1`
	num2x=`printf '%x\n' $num2`
	num3x=`printf '%x\n' $num3`
	if [ "$#" -eq 1 ]; then
		expectedcolor=$1
		case "$expectedcolor" in
			color_drgb)
				echo -e "${num1x}${num1x}${num1x}"
				return
				;;
			color_lrgb)
				lnum1=`expr 128 + $num1`
				num1x=`printf '%x\n' $lnum1`
				echo -e "${num1x}${num1x}${num1x}"
				return
				;;
			color_drg)
				echo -e "${num1x}${num2x}00"
				return
				;;
			color_lrg)
				lnum1=`expr 128 + $num1`
				lnum2=`expr 128 + $num2`
				num1x=`printf '%x\n' $lnum1`
				num2x=`printf '%x\n' $lnum2`
				echo -e "${num1x}${num2x}00"
				return
				;;
			color_dgb)
				echo -e "00${num1x}${num2x}"
				return
				;;
			color_lgb)
				lnum1=`expr 128 + $num1`
				lnum2=`expr 128 + $num2`
				num1x=`printf '%x\n' $lnum1`
				num2x=`printf '%x\n' $lnum2`
				echo -e "00${num1x}${num2x}"
				return
				;;
			color_drb)
				echo -e "${num1x}00${num2x}"
				return
				;;
			color_lrb)
				lnum1=`expr 128 + $num1`
				lnum2=`expr 128 + $num2`
				num1x=`printf '%x\n' $lnum1`
				num2x=`printf '%x\n' $lnum2`
				echo -e "${num1x}00${num2x}"
				return
				;;
			color_dr)
				echo -e "${num1x}0000"
				return
				;;
			color_lr)
				lnum1=`expr 128 + $num1`
				num1x=`printf '%x\n' $lnum1`
				echo -e "${num1x}0000"
				return
				;;
			color_db)
				echo -e "0000${num1x}"
				return
				;;
			color_lb)
				lnum1=`expr 128 + $num1`
				num1x=`printf '%x\n' $lnum1`
				echo -e "0000${num1x}"
				return
				;;
			color_dg)
				echo -e "00${num1x}00"
				return
				;;
			color_lg)
				lnum1=`expr 128 + $num1`
				num1x=`printf '%x\n' $lnum1`
				echo -e "00${num1x}00"
				return
				;;
			*) 
				# Simply pass through the provided color
				echo -e "${expectedcolor}"
				return
				;;
    	esac
	else
		# get three random numbers between 0-255
		num1=$(($RANDOM % 256))
		num2=$(($RANDOM % 256))
		num3=$(($RANDOM % 256))
		num1x=`printf '%x\n' $num1`
		num2x=`printf '%x\n' $num2`
		num3x=`printf '%x\n' $num3`
		echo -e "${num1x}${num2x}${num3x}"
		return
	fi
}

complete -F _generatehexcolor generatehexcolor


# Provide execution helper 
function dothis() {
    if [ -z "$1" ]; then
        echo "No command number passed"
        return 2
    fi
    exists=$(fc -l -1000 | grep ^$1 -- 2>/dev/null)
    if [ -n "$exists" ]; then
        fc -s -- "$1"
    else
        echo "Command with number $1 was not found in recent history"
        return 2
    fi
}

function _dothis_completions() {
    if [ "${#COMP_WORDS[@]}" != "2" ]; then
        return
    fi

    local IFS=$'\n'
    local suggestions=($(compgen -W "$(fc -l -50 | sed 's/\t//')" -- "${COMP_WORDS[1]}"))

    if [ "${#suggestions[@]}" == "1" ]; then
        local number="${suggestions[0]/%\ */}"
        COMPREPLY=("$number")
    else
        for i in "${!suggestions[@]}"; do
        suggestions[$i]="$(printf '%*s' "-$COLUMNS"  "${suggestions[$i]}")"
        done
        COMPREPLY=("${suggestions[@]}")
    fi
}

complete -F _dothis_completions dothis

